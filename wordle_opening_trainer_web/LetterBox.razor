<div id="@CellID" class="@CssClass">@Letter</div>
@code {
    [Parameter] public int ColID { get; set; } = 0;
    [Parameter] public int RowID { get; set; } = 0;
    [Parameter] public string Letter { get; set; } = "";
    [Parameter] public LetterResponseType Result { get; set; } = LetterResponseType.UNFILLED;
    [Parameter] public bool IsComplete { get; set; } = false;
    private string CellID => "cell_" + RowID.ToString() + "_" + ColID;

    private string CssClass => new CssBuilder().Add("tile").Add(ColumnClassname).Add(ResultClassname).Add(CompletionClassname).ToString();

    private string CompletionClassname => IsComplete ? "complete" : "in_progress";

    private string ColumnClassname 
    { 
        get
        {
            return "";
            if (!IsComplete) return "";
            switch (ColID)
            {
                case 0: return "firstcolumn";
                case 1: return "secondcolumn";
                case 2: return "thirdcolumn";
                case 3: return "fourthcolumn";
                case 4: return "fifthcolumn";
                default: return "nocolumn";
            }
        } 
    }

    private string ResultClassname
    {
        get
        {
            switch (Result)
            {
                case LetterResponseType.UNFILLED:
                    return "unfilled";
                case LetterResponseType.UNSUBMITTED:
                    return "unsubmitted";
                case LetterResponseType.WRONG_LETTER:
                    return "wrong_letter";
                case LetterResponseType.WRONG_SPACE:
                    return "wrong_space";
                case LetterResponseType.RIGHT:
                    return "right";
                case LetterResponseType.UNUSED:
                    return "unused";
                case LetterResponseType.FINAL_WRONG:
                    return "finalwrong";
                default:
                    return "unused";
            }
        }
    }
}
